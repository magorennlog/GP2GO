import 'dart:convert';
import 'dart:io';
import 'dart:ui';

import 'package:bubble/bubble.dart';
import 'package:flutter/material.dart';
import 'package:http/http.dart' as http;

// Run your app with 'flutter run --dart-define=OPENAI_KEY=YOUR_API_KEY_HERE
const OPENAI_KEY = String.fromEnvironment("OPENAI_KEY");

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    /// Global widget for our app
    return MaterialApp(
      title: 'Flutter Demo',
      debugShowCheckedModeBanner: false,

      /// Our custom theme colors
      theme: ThemeData(
        primaryColor: Colors.white,
        scaffoldBackgroundColor: Colors.white,
      ), 
      /// The main page
      home: MyHomePage(title: 'small STEPS'),
    );
  }
}

/// Dataclass to store a single message,
/// either from you or the AI
class Message {
  String text;
  bool byMe;

  Message(this.text, this.byMe);
}

/// Main page of our app, containing a scrollable chat history and a text field
class MyHomePage extends StatefulWidget {
  final String title;
  MyHomePage({Key key, this.title}) : super(key: key);

  @override
  _MyHomePageState createState() => _MyHomePageState();

  static _MyHomePageState of(BuildContext context) {
    return context.findAncestorStateOfType();
  }
}

class _MyHomePageState extends State<MyHomePage> {
  var textEditingController = TextEditingController();

  /// The initial promt given to OpenAI
  String prompt =
      "This is a conversation between John and a user. The user-data reflects the user’s habits. The John provides the user with suggestions for the user’s problem based on the user-data. John is a trustworthy and very polite lifestyle advisor and coach who answers to the user’s questions about nutrition to help them with their problem. First, he provides a few solutions with some details. Afterwards, he provides more information about the chosen solution."
      "User-data Name: Marvin City of Residence: Kirchheim bei München, Germany Job: Consultant Relationship: (single, engaged, Family, divorces): single Gender: male Age: 24 Weight: 90kg Height: 185cm Chronic deseases: none Healthy nutrition (from 1 - very bad to 10 - very good): 7 Diet: vegan Activity level (1 - not active to 10 - very active): 8 Bloodtype: none Stress Level (1 - very relaxed to 10 - very stressed): 8 Running habits: runs 5km per week Steps: 5000 per day Heart rate: average of 70bpm Blood sugar: high";
  /// The history of chat messages sent
  List<Message> messages = [];

  /// Construct a prompt for OpenAI with the new message and store the response
  void sendMessage(String message) async {
    if (message == "") {
      return;
    }

    /// Store the message itself
    setState(() {
      messages.add(Message(message, true));
    });

    /// Reset the text input
    textEditingController.text = "";

    /// Continue the prompt template
    prompt += "\n"
        "$message\n";

    /// Make the api request to OpenAI
    /// See available api parameters here: https://beta.openai.com/docs/api-reference/completions/create
    print("here is prompt"+prompt);
    var result = await http.post(
      Uri.parse("https://api.openai.com/v1/engines/davinci/completions"),
      headers: {
        "Authorization": "Bearer $OPENAI_KEY",
        "Accept": "application/json",
        "Content-Type": "application/json",
      },
      body: jsonEncode({
        "prompt": prompt,
        "max_tokens": 550,
        "temperature": 0.9,
        "top_p": 1,
        "stop": "\n",
      }),
    );

    /// Decode the body and select the first choice
    var body2 = jsonDecode(result.body);
    print(body2);
    var text = body2["choices"][0]["text"];
    print("here is response"+text);
    prompt += text;

    /// Store the response message
    setState(() {
      messages.add(Message(text.trim(), false));
    });
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      /// The top app bar with title
      appBar: AppBar(
        title: Text(widget.title, style: TextStyle(fontFamily: 'Sensei', color: Colors.lightBlue[200], fontWeight: FontWeight.bold, fontSize: 40)),
      ),
      body: Column(
        children: [
          /// The chat history
          Expanded(
            child: ListView(
              padding: const EdgeInsets.all(20.0),
              reverse: true, // makes it 'stick' to the bottom when sending new messages
              children: messages.reversed.map((message) {
                return Bubble(
                  child: Text(message.text, style: TextStyle(fontSize:18, color: Color(0xff33658a))), color: message.byMe ? Color(
                    0xffbadefc) : Color(0xffFF9585),
                  nip: message.byMe ? BubbleNip.rightBottom : BubbleNip.leftBottom,
                  alignment: message.byMe ? Alignment.topRight : Alignment.topLeft,
                  margin: BubbleEdges.symmetric(vertical: 5),
                );
              }).toList(),
            ),
          ),

          /// The bottom text field
          Container(
            color: Colors.lightGreen[200],
            padding: EdgeInsets.all(15),
            child: Row(
              children: [
                Expanded(
                  child: TextField(
                    style: TextStyle(fontSize:24.0, color: Color(0xffffffff)),
                    controller: textEditingController,
                    decoration: InputDecoration(
                      hintText: "Deine Frage",
                      hintStyle: TextStyle(color: Colors.white, fontWeight: FontWeight.bold, fontSize: 30),
                    ),
                    onSubmitted: (text) {
                      sendMessage(text);
                    },
                  ),
                ),
                IconButton(
                  icon: Icon(
                    Icons.send,
                    color: Theme.of(context).scaffoldBackgroundColor,
                    size: 34.0,
                  ),
                  onPressed: () {
                    sendMessage(textEditingController.text);
                  },
                ),
              ],
            ),
          ),
        ],
      ),
    );
  }
}
